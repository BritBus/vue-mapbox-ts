var index=function(e,t,o,a,n,r){"use strict";function i(e){return e&&"object"==typeof e&&"default"in e?e:{default:e}}var l=i(o),s=i(a),c=i(n),p=i(r);var u=t.defineComponent({name:"MapboxMap",props:{accessToken:{type:String,default:void 0},height:{type:String,default:"500px"},width:{type:String,default:"100%"},container:{type:[Object,String]||String,default:""},minZoom:{type:Number,default:0},maxZoom:{type:Number,default:22},minPitch:{type:Number,default:0},maxPitch:{type:Number,default:60},mapStyle:{type:[Object,String],default:"mapbox://styles/mapbox/streets-v11"},hash:{type:Boolean,default:!1},interactive:{type:Boolean,default:!0},bearingSnap:{type:Number,default:7},pitchWithRotate:{type:Boolean,default:!0},clickTolerance:{type:Number,default:3},attributionControl:{type:Boolean,default:!0},customAttribution:{type:Array,default:null},logoPosition:{type:String,default:"bottom-left"},failIfMajorPerformanceCaveat:{type:Boolean,default:!1},preserveDrawingBuffer:{type:Boolean,default:!1},antialias:{type:Boolean,default:!1},refreshExpiredTiles:{type:Boolean,default:!0},maxBounds:{type:Array,default:void 0},scrollZoom:{type:[Boolean,Object],default:!0},boxZoom:{type:Boolean,default:!0},dragRotate:{type:Boolean,default:!0},dragPan:{type:[Object,Boolean],default:!0},keyboard:{type:Boolean,default:!0},doubleClickZoom:{type:Boolean,default:!0},touchZoomRotate:{type:[Boolean,Object],default:!0},trackResize:{type:Boolean,default:!0},center:{type:[Object,Array],default:()=>[0,0]},zoom:{type:Number,default:0},bearing:{type:Number,default:0},pitch:{type:Number,default:0},bounds:{type:Array,default:void 0},fitBoundsOptions:{type:Object,default:null},renderWorldCopies:{type:Boolean,default:!0},maxTileCacheSize:{type:Number,default:null},localIdeographFontFamily:{type:String,default:"sans-serif"},transformRequest:{type:Function,default:null},collectResourceTiming:{type:Boolean,default:!1},fadeDuration:{type:Number,default:300},crossSourceCollisions:{type:Boolean,default:!0},zoomLogo:{type:Number,default:1}},setup:e=>{const o=t.ref(null),a=new s.default;t.provide("vmb_map",a);const n=(e=>t.ref({height:e.height,width:e.width,"--zoom-logo":e.zoomLogo>=.8?e.zoomLogo:1}))(e);return t.onMounted((()=>{l.default.accessToken=e.accessToken,((e,t,o)=>{(()=>{const a=o.value,n=((e,t)=>{const{accessToken:o,container:a,minZoom:n,maxZoom:r,minPitch:i,maxPitch:l,hash:s,interactive:c,bearingSnap:p,pitchWithRotate:u,clickTolerance:d,attributionControl:m,customAttribution:f,logoPosition:y,failIfMajorPerformanceCaveat:h,preserveDrawingBuffer:b,antialias:g,refreshExpiredTiles:v,maxBounds:C,scrollZoom:x,boxZoom:B,dragRotate:M,dragPan:S,keyboard:w,doubleClickZoom:k,touchZoomRotate:_,trackResize:O,center:N,zoom:j,bearing:P,pitch:A,bounds:L,fitBoundsOptions:G,renderWorldCopies:R,maxTileCacheSize:T,localIdeographFontFamily:Z,transformRequest:z,collectResourceTiming:F,fadeDuration:I,crossSourceCollisions:$}=e;var W;return{accessToken:o,container:a||t,minZoom:n,maxZoom:r,minPitch:i,maxPitch:l,style:(W=e.mapStyle).includes("/")?W:`mapbox://styles/mapbox/${W}`,hash:s,interactive:c,bearingSnap:p,pitchWithRotate:u,clickTolerance:d,attributionControl:m,customAttribution:f,logoPosition:y,failIfMajorPerformanceCaveat:h,preserveDrawingBuffer:b,antialias:g,refreshExpiredTiles:v,maxBounds:C,scrollZoom:x,boxZoom:B,dragRotate:M,dragPan:S,keyboard:w,doubleClickZoom:k,touchZoomRotate:_,trackResize:O,center:N,zoom:j,bearing:P,pitch:A,bounds:L,fitBoundsOptions:G,renderWorldCopies:R,maxTileCacheSize:T,localIdeographFontFamily:Z,transformRequest:z,collectResourceTiming:F,fadeDuration:I,crossSourceCollisions:$}})(e,a),r=new l.default.Map(n);r.on("load",(()=>{t.resolve(r)}))})()})(e,a,o)})),{vmb_map:a,root:o,style:n}}});const d=t.withScopeId("data-v-4b862892");t.pushScopeId("data-v-4b862892");const m={key:1};t.popScopeId();const f=d(((e,o,a,n,r,i)=>(t.openBlock(),t.createBlock("div",{style:e.style},[e.vmb_map.isResolved?(t.openBlock(),t.createBlock("div",{key:0,ref:"root",style:e.style},[t.renderSlot(e.$slots,"default")],4)):(t.openBlock(),t.createBlock("div",m,[t.renderSlot(e.$slots,"loader",{},(()=>[t.createVNode("div",{style:e.style},null,4)]))]))],4))));!function(e,t){void 0===t&&(t={});var o=t.insertAt;if(e&&"undefined"!=typeof document){var a=document.head||document.getElementsByTagName("head")[0],n=document.createElement("style");n.type="text/css","top"===o&&a.firstChild?a.insertBefore(n,a.firstChild):a.appendChild(n),n.styleSheet?n.styleSheet.cssText=e:n.appendChild(document.createTextNode(e))}}("[data-v-4b862892] .mapboxgl-ctrl-logo {\n  zoom: var(--zoom-logo);\n}"),u.render=f,u.__scopeId="data-v-4b862892";var y={setup:()=>({vmb_map:t.inject("vmb_map")})};const h=e=>((e,t)=>!!e.parent&&e.parent.type.name===t)(e,"MapboxMarker");var b=t.defineComponent({name:"MapboxMarker",props:{lngLat:{default:()=>[0,0]},offset:{type:[Array],default:()=>[0,0]},anchor:{type:String,default:()=>"left"},color:{type:String,default:null},scale:{type:Number,default:1},draggable:{type:Boolean,default:!1},rotation:{type:Number,default:0},pitchAlignment:{type:String,default:"auto"},rotationAlignment:{type:String,default:"auto"}},setup(e){const{vmb_map:a}=y.setup(),n=new c.default,r=t.ref(e.lngLat),i=t.ref(null),l=t.ref(null),s=(e=>{const{element:t,offset:o,anchor:a,color:n,draggable:r,clickTolerance:i,rotation:l,rotationAlignment:s,pitchAlignment:c,scale:p}=e;return{element:t,offset:o,anchor:a,color:n,draggable:r,clickTolerance:i,rotation:l,rotationAlignment:s,pitchAlignment:c,scale:p}})(e);return t.provide("vmb_marker",n),t.onMounted((async()=>{const e=t.getCurrentInstance();e&&await((e,t,a,n,r,i)=>(async()=>{const l=await t.promise;var s;i&&(s=i.value)&&"<div></div>"!==s.outerHTML&&(e.element=i.value);const c=new o.Marker(e).setLngLat(r);((e,t)=>{e.on("drag",(e=>{const{lng:o,lat:a}=e.target._lngLat;t._lngLat=[o,a],t.emit("drag",e)})),e.on("dragend",(e=>{t.emit("dragend",e)})),e.on("dragstart",(e=>{t.emit("dragstart",e)})),e.getElement().addEventListener("click",(o=>{t.emit("click",e)}))})(c,n),c.addTo(l),a.resolve(c)})())(s,a,n,e,r.value,l)})),{vmb_map:a,vmb_marker:n,i_lngLat:r,i_popups:i,options:s,icon:l}},watch:{$children(e){console.log("CHILDREN CHANGED"),console.log(e)}}});const g={ref:"icon"};b.render=function(e,o,a,n,r,i){return t.openBlock(),t.createBlock("div",null,[t.createVNode("div",g,[t.renderSlot(e.$slots,"icon")],512),t.renderSlot(e.$slots,"default")])};var v=t.defineComponent({name:"MapboxNavigationControl",props:{showCompass:{type:Boolean,default:!0},showZoom:{type:Boolean,default:!0},visualizePitch:{type:Boolean,default:!1},position:{type:String,default:()=>"top-right"}},setup(e){const o=t.inject("vmb_map"),a=(e=>{const{showCompass:t,showZoom:o,vizualizePitch:a}=e;return{showCompass:t,showZoom:o,vizualizePitch:a}})(e),n=new l.default.NavigationControl(a),r=e.position;return t.onMounted((()=>{((e,t,o)=>{(async()=>{(await t.promise).addControl(e,o)})()})(n,o,r)})),{vmb_map:o}}});v.render=function(e,o,a,n,r,i){return t.openBlock(),t.createBlock("div")};const C=e=>e/110.574,x=(e,t)=>e/(111.32*Math.cos(t*Math.PI/180));var B=t.defineComponent({name:"MapboxPopup",props:{lngLat:{default:()=>[0,0]},closeButton:{type:Boolean,default:!1},closeOnClick:{type:Boolean,default:!0},closeOnMove:{type:Boolean,default:!1},anchor:{type:String,default:void 0},offset:{type:Number,default:void 0},className:{type:String},maxWidth:{type:String,default:"500px"},renderless:{type:Boolean,default:!1}},setup(e){const o=t.ref(null),a=t.inject("vmb_map"),n=t.inject("vmb_marker",null),r=t.inject("vmb_circle",null),i=t.inject("vmb_polygon",null),s=t.inject("vmb_rectangle",null),c=r||i||s||null,p=(e=>{const{closeButton:t,closeOnClick:o,closeOnMove:a,focusAfterOpen:n,anchor:r,offset:i,className:l,maxWidth:s}=e;return{closeButton:t,closeOnClick:o,closeOnMove:a,focusAfterOpen:n,anchor:r,offset:i,className:l,maxWidth:s}})(e),u=new l.default.Popup(p).setLngLat(e.lngLat);return t.onMounted((async()=>{const e=t.getCurrentInstance();await(async(e,t,o,a,n,r)=>{const i=await t.promise,l=o;l.setDOMContent(r.value),h(e)?await(async(e,t,o)=>{t&&(await t.promise).setPopup(o)})(0,a,l):(e=>((e,t)=>!!e.parent&&e.parent.type.name.includes(t))(e,"MapboxGeogeometry"))(e)?await(async(e,t,o)=>{if(t){const a=await e.promise;a.on("click",t.id,(e=>{const n=t.center;o.setLngLat(n).addTo(a)}))}})(t,n,l):l.addTo(i)})(e,a,u,n,c,o)})),{vmb_marker:n,vmb_popup:u,popupOptions:p,content:o,vmb_map:a}}});const M={ref:"content"};B.render=function(e,o,a,n,r,i){return t.openBlock(),t.createBlock("div",M,[t.renderSlot(e.$slots,"default")],512)};var S=t.defineComponent({name:"MapboxAttributionControl",props:{compact:{type:Boolean,default:!1},customAttribution:{type:[String,Array],default:void 0}},setup(e){const o=(e=>{const{compact:t,customAttribution:o}=e;return{compact:t,customAttribution:o}})(e),a=new l.default.AttributionControl(o),n=t.inject("vmb_map");return t.onMounted((async()=>{n&&(async(e,t)=>{(await e.promise).addControl(t)})(n,a)})),{vmb_attributionControl:a,vmb_map:n}}});S.render=function(e,o,a,n,r,i){return t.openBlock(),t.createBlock("div")};var w=t.defineComponent({name:"MapboxScaleControl",props:{maxWidth:{type:Number,default:100},unit:{type:String,default:"metric"}},setup(e){const o=(e=>{const{maxWidth:t,unit:o}=e;return{maxWidth:t,unit:o}})(e),a=new l.default.ScaleControl(o),n=t.inject("vmb_map",null);return t.onMounted((async()=>{n&&await(async(e,t)=>{(await e.promise).addControl(t)})(n,a)})),{vmb_scaleControl:a,vmb_map:n}}});w.render=function(e,o,a,n,r,i){return t.openBlock(),t.createBlock("div")};var k=t.defineComponent({name:"MapboxFullscreenControl",props:{container:{type:Object,default:void 0}},setup(e){const o=t.inject("vmb_map"),a=(e=>{const{container:t}=e;return{container:t}})(e),n=new l.default.FullscreenControl(a);return t.onMounted((async()=>{await(async(e,t)=>{(await t.promise).addControl(e)})(n,o)})),{vmb_map:o,vmb_fullscreenControl:n}}});k.render=function(e,o,a,n,r,i){return t.openBlock(),t.createBlock("div")};var _=t.defineComponent({name:"MapboxSourceGeoJson",props:{container:{type:Object,default:void 0}},setup(e){const a=t.inject("vmb_map");return new o.GeoJSONSource,t.onMounted((async()=>{(await a.promise).addSource})),{vmb_map:a}}});const O={ref:"features"};_.render=function(e,o,a,n,r,i){return t.openBlock(),t.createBlock("div",O,[t.renderSlot(e.$slots,"default")],512)};var N=t.defineComponent({name:"MapboxSourceGeoJson",props:{pixelRatio:{type:Number,default:2},sdf:{type:Boolean,default:!0},name:{type:String,default:()=>p.default({length:10,type:"alphanumeric"})}},setup(e){const o=t.ref(null),a=t.inject("vmb_map"),n=t.inject("vmb_marker",null),r=new s.default,i=(e=>{const{pixelRatio:t,sdf:o}=e;return{pixelRatio:t,sdf:o}})(e),l={name:e.name,icon:o,options:i};return t.onMounted((async()=>{const e=t.getCurrentInstance();e&&(await(async(e,t,o,a)=>{!e.icon.value||(await t.promise,h(a))})(l,a,0,e),r.resolve(l))})),{vmb_map:a,vmb_marker:n,vmb_icon:r,options:i}}});const j={ref:"content"};N.render=function(e,o,a,n,r,i){return t.openBlock(),t.createBlock("div",j,[t.renderSlot(e.$slots,"default")],512)};var P=t.defineComponent({name:"MapboxGeolocateControl",props:{positionOptions:{type:Object,default:()=>({enableHighAccuracy:!1,timeout:6e3})},fitBoundsOptions:{type:Object,default:()=>({maxZoom:15})},trackUserLocation:{type:Boolean,default:!1},showAccuracyCircle:{type:Boolean,default:!0},showUserLocation:{type:Boolean,default:!0}},setup(e){const o=t.inject("vmb_map"),a=(e=>{const{fitBoundsOptions:t,positionOptions:o,showAccuracyCircle:a,showUserLocation:n,trackUserLocation:r}=e;return{fitBoundsOptions:t,positionOptions:o,showAccuracyCircle:a,showUserLocation:n,trackUserLocation:r}})(e),n=new l.default.GeolocateControl(a);return t.onMounted((async()=>{(await o.promise).addControl(n)})),{vmb_map:o,vmb_geolocationControl:n}}});P.render=function(e,o,a,n,r,i){return t.openBlock(),t.createBlock("div")};class A{constructor(e){this.id=e.id,this.fillColor=e.fillColor||"#3FB1CE",this.antialias="boolean"!=typeof e.antialias||e.antialias,this.opacity="number"==typeof e.opacity?e.opacity:.6,e.outlineColor&&(this.outlineColor=e.outlineColor)}updateOptions(e){e.fillColor&&(this.fillColor=e.fillColor),"boolean"==typeof e.antialias&&(this.antialias=e.antialias),"number"==typeof e.opacity&&(this.opacity=e.opacity),e.outlineColor&&(this.outlineColor=e.outlineColor)}getPaint(){const e={};return this.fillColor&&(e["fill-color"]=this.fillColor),this.antialias&&(e["fill-antialias"]=this.antialias),this.opacity&&(e["fill-opacity"]=this.opacity),this.outlineColor&&(e["fill-outline-color"]=this.outlineColor),e}}class L extends A{constructor(e){super(e),this.edges=e.edges||10,this.radius=e.radius,this.center=e.center}updateOptions(e){super.updateOptions(e),e.edges&&(this.edges=e.edges),e.radius&&(this.radius=e.radius),e.center&&(this.center=e.center)}getGeoJSON(){const e=this.edges,t=x(this.radius,this.center[1]),o=C(this.radius),a=[];for(let n=0;n<e;n++){const r=n/e*(2*Math.PI),i=t*Math.cos(r),l=o*Math.sin(r);a.push([this.center[0]+i,this.center[1]+l])}return{type:"geojson",data:{type:"FeatureCollection",features:[{type:"Feature",geometry:{type:"Polygon",coordinates:[a]},properties:{}}]}}}}const G=(e,t)=>{t.getLayer(e)&&t.removeLayer(e)},R=(e,t)=>{t.getSource(e)&&t.removeSource(e)},T=async(e,t)=>{const o=await e.promise,a=t;G(a.id,o),R(a.id,o),o.addSource(a.id,a.getGeoJSON()),o.addLayer({id:a.id,type:"fill",source:a.id,layout:{},paint:a.getPaint()})};let Z=0;var z=t.defineComponent({name:"MapboxGeogeometryCircle",props:{id:{type:String,default:"circle-"+Z++},center:{type:Array,required:!0},radius:{type:Number,required:!0},edges:{type:Number,default:10},fillColor:{type:String},outlineColor:{type:String},opacity:{type:Number},antialias:{type:Boolean}},setup(e){const o=t.inject("vmb_map"),a=new L({id:e.id,radius:e.radius,center:e.center,edges:e.edges,fillColor:e.fillColor,outlineColor:e.outlineColor,opacity:e.opacity,antialias:e.antialias});return t.provide("vmb_circle",a),t.onMounted((async()=>{await T(o,a)})),t.watch(e,(async()=>{a.updateOptions(e),await T(o,a)})),{vmb_map:o,vmb_circle:a}}});const F={ref:"features"};z.render=function(e,o,a,n,r,i){return t.openBlock(),t.createBlock("div",F,[t.renderSlot(e.$slots,"default")],512)};class I extends A{constructor(e){super(e),this.path=e.path}updateOptions(e){super.updateOptions(e),e.path&&(this.path=e.path)}get center(){const e=this.path.reduce(((e,t)=>[e[0]+t[0],e[1]+t[1]]));return[e[0]/this.path.length,e[1]/this.path.length]}getGeoJSON(){return{type:"geojson",data:{type:"FeatureCollection",features:[{type:"Feature",geometry:{type:"Polygon",coordinates:[this.path]},properties:{}}]}}}}const $=async(e,t)=>{const o=await e.promise,a=t;G(a.id,o),R(a.id,o),o.addSource(a.id,a.getGeoJSON()),o.addLayer({id:a.id,type:"fill",source:a.id,layout:{},paint:a.getPaint()})};let W=0;var D=t.defineComponent({name:"MapboxGeogeometryPolygon",props:{id:{type:String,default:"polygon-"+W++},path:{type:Array,required:!0},fillColor:{type:String},outlineColor:{type:String},opacity:{type:Number},antialias:{type:Boolean}},setup(e){const o=t.inject("vmb_map"),a=new I({id:e.id,path:e.path,fillColor:e.fillColor,outlineColor:e.outlineColor,opacity:e.opacity,antialias:e.antialias});return t.provide("vmb_polygon",a),t.onMounted((async()=>{await $(o,a)})),t.watch(e,(async()=>{a.updateOptions(e),await $(o,a)})),{vmb_map:o,vmb_polygon:a}}});const E={ref:"features"};D.render=function(e,o,a,n,r,i){return t.openBlock(),t.createBlock("div",E,[t.renderSlot(e.$slots,"default")],512)};class J extends A{constructor(e){super(e),this.width=e.width,this.height=e.height,this.center=e.center}updateOptions(e){super.updateOptions(e),e.width&&(this.width=e.width),e.height&&(this.height=e.height)}getGeoJSON(){const e=x(this.width,this.center[1]),t=C(this.height);return{type:"geojson",data:{type:"FeatureCollection",features:[{type:"Feature",geometry:{type:"Polygon",coordinates:[[[this.center[0]+e/2,this.center[1]+t/2],[this.center[0]+e/2,this.center[1]-t/2],[this.center[0]-e/2,this.center[1]-t/2],[this.center[0]-e/2,this.center[1]+t/2],[this.center[0]+e/2,this.center[1]+t/2]]]},properties:{}}]}}}}const q=async(e,t)=>{const o=await e.promise,a=t;G(a.id,o),R(a.id,o),o.addSource(a.id,a.getGeoJSON()),o.addLayer({id:a.id,type:"fill",source:a.id,layout:{},paint:a.getPaint()})};let U=0;var H=t.defineComponent({name:"MapboxGeogeometryRectangle",props:{id:{type:String,default:"rectangle-"+U++},center:{type:Array,required:!0},width:{type:Number,required:!0},height:{type:Number,required:!0},fillColor:{type:String},outlineColor:{type:String},opacity:{type:Number},antialias:{type:Boolean}},setup(e){const o=t.inject("vmb_map"),a=new J({id:e.id,width:e.width,height:e.height,center:e.center,fillColor:e.fillColor,outlineColor:e.outlineColor,opacity:e.opacity,antialias:e.antialias});return t.provide("vmb_rectangle",a),t.onMounted((async()=>{await q(o,a)})),t.watch(e,(async()=>{a.updateOptions(e),await q(o,a)})),{vmb_map:o,vmb_rectangle:a}}});const V={ref:"features"};H.render=function(e,o,a,n,r,i){return t.openBlock(),t.createBlock("div",V,[t.renderSlot(e.$slots,"default")],512)};var K=Object.freeze({__proto__:null,MapboxMap:u,MapboxIcon:N,MapboxMarker:b,MapboxNavigationControl:v,MapboxPopup:B,MapboxAttributionControl:S,MapboxScaleControl:w,MapboxFullscreenControl:k,MapboxSourceGeoJson:_,MapboxGeolocateControl:P,MapboxGeogeometryCircle:z,MapboxGeogeometryPolygon:D,MapboxGeogeometryRectangle:H});return e.MapboxAttributionControl=S,e.MapboxFullscreenControl=k,e.MapboxGeogeometryCircle=z,e.MapboxGeogeometryPolygon=D,e.MapboxGeogeometryRectangle=H,e.MapboxGeolocateControl=P,e.MapboxIcon=N,e.MapboxMap=u,e.MapboxMarker=b,e.MapboxNavigationControl=v,e.MapboxPopup=B,e.MapboxScaleControl=w,e.MapboxSourceGeoJson=_,e.default=e=>{Object.keys(K).forEach((t=>{e.component(t,K[t])}))},Object.defineProperty(e,"__esModule",{value:!0}),e}({},Vue,mapboxgl,Deferred,Deferred$1,randomString);